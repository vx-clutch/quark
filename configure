#!/bin/sh

usage() {
cat <<EOF
Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.

  CC      C compiler command [detected]
  CFLAGS  C compiler flags [-g, ...]

EOF
exit 0
}

cmdexists () { type "$1" >/dev/null 2>&1 ; }
trycc () { test -z "$CC" && cmdexists "$1" && CC=$1 ; }

prefix=/usr/local/quark
exec_prefix=/usr/local
syslibdir=/lib
CFLAGS=
LDFLAGS=
CC=

for arg ; do
case "$arg" in
--help|h) usage ;;
CFLAGS=*) CFLAGS=${arg#*=} ;;
LDFLAGS=*) LDFLAGS=${arg#*=} ;;
esac
done

printf "checking for C compiler... "
trycc gcc
trycc cc
trycc clang
printf "%s\n" "$CC"

printf "checking weather C compiler works... "
status="no"
tmpc="$(mktemp -d)/test.c"
cat > "$tmpc" > <<EOF
int main(void) { return 0; }
EOF
if ! "$CC" "$tmpc" -o "$(mktemp -d)/test" >/dev/null 2>&1; then
status="yes"
fi
printf "%s\n" "$status"
if [ status != "yes" ]; then
exit 1
fi

printf "creating config.mak... "
printf "%s\n" "$prefix" > config.mak
printf "%s\n" "$exec_prefix" >> config.mak
printf "%s\n" "$syslibdir" >> config.mak
printf "%s\n" "$CFLAGS" >> config.mak
printf "%s\n" "$LDFLAGS" >> config.mak
printf "%s\n" "$CC" >> config.mak
printf "done\n"
